package com.xym.bossed.shiro.ipSecurity;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * 
 * @author xyg If login attampted times is over 5 times for one ip adrress, then
 *         forbidden the ip address login within half hour.
 * 
 */
public class IPStrategy {
	private static Map<String, HostBean> ipMap=new HashMap<String,HostBean>();

	// add failure attampt login to static map
	public static void addFailureAttampt(String ip, String userName,
			String password,String failReason) {
		HostBean hb=null;
		if (!ipMap.containsKey(ip)) {
			hb = new HostBean();
			hb.setIp(ip);
			hb.setFailureTimesCount(1);
			hb.setFirstFailureTime(getNow());
			hb.setPermanentForbidden(false);
		} else {
			hb = (HostBean) ipMap.get(ip);
			hb.setFailureTimesCount(hb.getFailureTimesCount() + 1);
		}
		addHostBean2IPMap(userName, password, failReason,hb);
		ipMap.put(ip, hb);
	}

	// check if this ip allow login
	public static boolean checkLoginIP(String ip) {
		Object obj = ipMap.get(ip);
		// no record,pass
		if (obj == null) {
			return true;
		}
		// check if is permanently forbidden
		HostBean hb = (HostBean) obj;
		if (hb.isPermanentForbidden()) {
			return false;
		}
		// check if the first attampt login over half hour from now
		Date date1=hb.getFirstFailureTime();
		//add half hour to date1
		date1.setTime(((date1.getTime()/1000)+60*30)*1000);
		
		/**compare to now,
		**if lower than now after adding 30min, 
		*says has overed half hour than now,can remove,pass
		**/
		if(date1.compareTo(getNow())==-1)
		{
			unlockIP(ip);
			return true;
		}
		/**
		 * if  greater than now after adding 30min, 
		 * says the record  still validate,next,check the failure count
		 */
		if(hb.getFailureTimesCount()>5)
		{
			return false;
		}
		return true;
	}

	public static void printIPStrategyTable() {
         
	}

	public static void unlockIP(String ip) {
		ipMap.remove(ip);
	}

	public static void permanetForbiddenIP(String ip) {
		
		HostBean hb = null;
		if (!ipMap.containsKey(ip)) {
			hb = new HostBean();
			hb.setIp(ip);
		} else {
			hb = (HostBean) ipMap.get(ip);
		}
		hb.setPermanentForbidden(true);
		ipMap.put(ip, hb);
	}

	private static void addHostBean2IPMap(String userName, String password,String failReason,
			HostBean hb) {
		TryUserBean tub = new TryUserBean();

		// if the tryUserList over 10,set it to zero,in case too large
		if (hb.getUserList()!=null&&hb.getUserList().size() > 10) {
			List<TryUserBean> list = hb.getUserList();
			list.clear();
		}
		tub.setUserName(userName);
		tub.setPassword(password);
		tub.setTryTime(getNow());
		tub.setFailReason(failReason);
		ArrayList<TryUserBean> list = new ArrayList<TryUserBean>();
		list.add(tub);
		hb.setUserList(list);
	}

	private static Date getNow() {
		Date rt = null;
		SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
		String str = format.format(new Date());

		try {
			rt = format.parse(str);
		} catch (ParseException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return rt;
	}

	public static void main(String[] args) throws ParseException {
		SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
		Date date1=format.parse("2014-03-07 18:00:29");
		String str1 = format.format(date1);
		
		//add half hour to date1
		date1.setTime(((date1.getTime()/1000)+60*30)*1000);
		
		Date date2=IPStrategy.getNow();
		System.out.println(date1);
	}
}
